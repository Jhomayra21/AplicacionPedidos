@model IEnumerable<Pedidos.Models.ProductoModel>

@{
    ViewData["Title"] = "Catálogo de Productos";
    var viewMode = ViewBag.ViewMode ?? "cards"; // cards o table
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h1 class="mb-0" style="color: #4E4259;">
            <i class="fas fa-box me-2"></i>@ViewData["Title"]
        </h1>
        <div class="d-flex gap-2">
            <!-- Toggle de vista -->
            <div class="btn-group" role="group">
                <button type="button" class="btn btn-sm @(viewMode == "cards" ? "btn-primary" : "btn-outline-primary")" 
                        onclick="toggleView('cards')" title="Vista de Tarjetas">
                    <i class="fas fa-th-large"></i>
                </button>
                <button type="button" class="btn btn-sm @(viewMode == "table" ? "btn-primary" : "btn-outline-primary")" 
                        onclick="toggleView('table')" title="Vista de Tabla">
                    <i class="fas fa-table"></i>
                </button>
            </div>
            @if (User.IsInRole("admin") || User.IsInRole("empleado"))
            {
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Nuevo Producto
                </a>
            }
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert" style="background-color: #E1DBE6; border-color: #D0C6D8; color: #4E4259;">
            <i class="fas fa-check-circle me-2"></i> @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null || ViewBag.Error != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> @(TempData["Error"] ?? ViewBag.Error)
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Estadísticas rápidas -->
    @if (Model.Any())
    {
        <div class="row mb-4 g-3">
            <div class="col-md-3">
                <div class="card border-0 stats-card" style="background: linear-gradient(135deg, #6D5A7C, #9D8AA8); color: white;">
                    <div class="card-body text-center py-3">
                        <i class="fas fa-boxes fa-2x mb-2 opacity-75"></i>
                        <h3 class="mb-0">@Model.Count()</h3>
                        <small>Total Productos</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 stats-card" style="background: linear-gradient(135deg, #28A745, #20C997); color: white;">
                    <div class="card-body text-center py-3">
                        <i class="fas fa-check-circle fa-2x mb-2 opacity-75"></i>
                        <h3 class="mb-0">@Model.Count(p => p.Stock > 0)</h3>
                        <small>En Stock</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 stats-card" style="background: linear-gradient(135deg, #FFC107, #FFD60A); color: #2B2B35;">
                    <div class="card-body text-center py-3">
                        <i class="fas fa-exclamation-triangle fa-2x mb-2 opacity-75"></i>
                        <h3 class="mb-0">@Model.Count(p => p.Stock > 0 && p.Stock <= 10)</h3>
                        <small>Stock Bajo</small>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card border-0 stats-card" style="background: linear-gradient(135deg, #4E4259, #6D5A7C); color: white;">
                    <div class="card-body text-center py-3">
                        <i class="fas fa-dollar-sign fa-2x mb-2 opacity-75"></i>
                        <h3 class="mb-0" style="font-size: 1.5rem;">$@Model.Average(p => p.Precio).ToString("F0")</h3>
                        <small>Precio Promedio</small>
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Filtros mejorados -->
    <div class="card mb-4" style="border-color: #9D8AA8; border-radius: 15px; overflow: hidden;">
        <div class="card-header border-0" style="background: linear-gradient(135deg, #6D5A7C, #9D8AA8); color: white; padding: 1rem;">
            <h5 class="mb-0">
                <i class="fas fa-search me-2"></i>Filtrar productos
            </h5>
        </div>
        <div class="card-body">
            <form asp-action="Search" method="get" class="row g-3">
                <div class="col-md-4">
                    <label for="searchString" class="form-label">Nombre o descripción</label>
                    <div class="search-container">
                        <input type="text" id="searchString" name="searchString" class="form-control" placeholder="Buscar productos..." value="@ViewBag.SearchString" />
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="minPrice" class="form-label">Precio mínimo</label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #E1DBE6;"><i class="fas fa-dollar-sign"></i></span>
                        <input type="number" step="0.01" min="0" id="minPrice" name="minPrice" class="form-control" placeholder="0.00" value="@ViewBag.MinPrice" />
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="maxPrice" class="form-label">Precio máximo</label>
                    <div class="input-group">
                        <span class="input-group-text" style="background-color: #E1DBE6;"><i class="fas fa-dollar-sign"></i></span>
                        <input type="number" step="0.01" min="0" id="maxPrice" name="maxPrice" class="form-control" placeholder="Sin límite" value="@ViewBag.MaxPrice" />
                    </div>
                </div>
                <div class="col-md-2 d-flex align-items-end">
                    <button type="submit" class="btn w-100" style="background-color: #4E4259; color: white; border-radius: 10px;">
                        <i class="fas fa-filter me-2"></i> Filtrar
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Vista de Tabla -->
    <div id="tableView" class="@(viewMode == "table" ? "" : "d-none")">
        <div class="card border-0 shadow-sm" style="border-radius: 15px; overflow: hidden;">
            <div class="card-header border-0" style="background: linear-gradient(135deg, #2B2B35, #4E4259); color: white; padding: 1.5rem;">
                <h5 class="mb-0">
                    <i class="fas fa-table me-2"></i>Productos en Stock (@Model.Count())
                </h5>
            </div>
            <div class="card-body p-0">
                @if (Model.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover mb-0 modern-products-table">
                            <thead>
                                <tr style="background-color: #F8F9FA;">
                                    <th class="border-0 py-3 px-4" style="color: #4E4259; font-weight: 600;">
                                        <i class="fas fa-box me-2"></i>Producto
                                    </th>
                                    <th class="border-0 py-3 px-4" style="color: #4E4259; font-weight: 600;">
                                        <i class="fas fa-info-circle me-2"></i>Descripción
                                    </th>
                                    <th class="border-0 py-3 px-4" style="color: #4E4259; font-weight: 600;">
                                        <i class="fas fa-dollar-sign me-2"></i>Precio
                                    </th>
                                    <th class="border-0 py-3 px-4" style="color: #4E4259; font-weight: 600;">
                                        <i class="fas fa-warehouse me-2"></i>Stock
                                    </th>
                                    <th class="border-0 py-3 px-4 text-center" style="color: #4E4259; font-weight: 600;">
                                        <i class="fas fa-cogs me-2"></i>Acciones
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr class="product-row" style="transition: all 0.3s ease; border-bottom: 1px solid #E9ECEF;">
                                        <td class="py-3 px-4">
                                            <div class="d-flex align-items-center">
                                                <div class="product-avatar me-3" 
                                                     style="width: 50px; height: 50px; border-radius: 10px; 
                                                            background: linear-gradient(135deg, #6D5A7C, #9D8AA8); 
                                                            display: flex; align-items: center; justify-content: center; color: white; font-weight: bold;">
                                                    <i class="fas fa-cube fa-lg"></i>
                                                </div>
                                                <div>
                                                    <div class="fw-semibold" style="color: #2B2B35;">@item.Nombre</div>
                                                    <small class="text-muted">ID: @item.Id</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td class="py-3 px-4" style="max-width: 300px;">
                                            <div class="text-truncate" style="color: #4E4259;" title="@item.Descripcion">
                                                @(item.Descripcion?.Length > 50 ? item.Descripcion.Substring(0, 47) + "..." : item.Descripcion)
                                            </div>
                                        </td>
                                        <td class="py-3 px-4">
                                            <div class="table-numeric">
                                                $@item.Precio.ToString("F2")
                                            </div>
                                        </td>
                                        <td class="py-3 px-4">
                                            @{
                                                var stockConfig = item.Stock > 10 
                                                    ? new { Bg = "#28A745", Icon = "fas fa-check-circle", Text = item.Stock + " disponibles", TextColor = "#FFF" }
                                                    : item.Stock > 0 
                                                        ? new { Bg = "#FFC107", Icon = "fas fa-exclamation-triangle", Text = item.Stock + " últimos", TextColor = "#000" }
                                                        : new { Bg = "#DC3545", Icon = "fas fa-times-circle", Text = "Sin stock", TextColor = "#FFF" };
                                            }
                                            <span class="badge stock-badge" 
                                                  style="background-color: @stockConfig.Bg; color: @stockConfig.TextColor; 
                                                         padding: 8px 15px; border-radius: 20px; font-weight: 500; font-size: 0.85rem;">
                                                <i class="@stockConfig.Icon me-1"></i>
                                                @stockConfig.Text
                                            </span>
                                        </td>
                                        <td class="py-3 px-4 text-center">
                                            <div class="btn-group shadow-sm" role="group">
                                                <a asp-action="Details" asp-route-id="@item.Id" 
                                                   class="btn btn-sm action-btn" 
                                                   style="background-color: #E1DBE6; color: #4E4259; border: none; padding: 8px 12px; border-radius: 8px 0 0 8px;" 
                                                   title="Ver Detalles">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                                @if (User.IsInRole("admin") || User.IsInRole("empleado"))
                                                {
                                                    <a asp-action="Edit" asp-route-id="@item.Id" 
                                                       class="btn btn-sm action-btn" 
                                                       style="background-color: #9D8AA8; color: white; border: none; padding: 8px 12px; margin-left: 1px;" 
                                                       title="Editar Producto">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    @if (User.IsInRole("admin"))
                                                    {
                                                        <a asp-action="Delete" asp-route-id="@item.Id" 
                                                           class="btn btn-sm action-btn" 
                                                           style="background-color: #4E4259; color: white; border: none; padding: 8px 12px; border-radius: 0 8px 8px 0; margin-left: 1px;" 
                                                           title="Eliminar Producto"
                                                           onclick="return confirm('¿Estás seguro de que deseas eliminar este producto?')">
                                                            <i class="fas fa-trash"></i>
                                                        </a>
                                                    }
                                                }
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="fas fa-box-open fa-3x mb-3" style="color: #E1DBE6;"></i>
                        <h4 style="color: #4E4259;">No hay productos disponibles</h4>
                        <p class="text-muted mb-4">No se encontraron productos que coincidan con los criterios de búsqueda.</p>
                        @if (User.IsInRole("admin") || User.IsInRole("empleado"))
                        {
                            <a asp-action="Create" class="btn" style="background-color: #6D5A7C; color: white;">
                                <i class="fas fa-plus me-2"></i>Agregar Primer Producto
                            </a>
                        }
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Vista de Cards (existente) -->
    <div id="cardsView" class="@(viewMode == "cards" ? "" : "d-none")">
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
            @foreach (var item in Model)
            {
                <div class="col">
                    <div class="card h-100" style="border-radius: 10px; overflow: hidden; box-shadow: 0 4px 6px rgba(0,0,0,0.1); transition: all 0.3s ease;">
                        <div class="card-header" style="background-color: #6D5A7C; color: white;">
                            <h5 class="card-title mb-0">@item.Nombre</h5>
                        </div>
                        <div class="card-body d-flex flex-column">
                            <p class="card-text flex-grow-1" style="color: #2B2B35;">
                                @(item.Descripcion?.Length > 100 ? item.Descripcion.Substring(0, 97) + "..." : item.Descripcion)
                            </p>
                            <div class="d-flex justify-content-between align-items-center mt-3">
                                <span class="h5 fw-bold mb-0" style="color: #4E4259;">$@item.Precio.ToString("F2")</span>
                                @{
                                    string stockText = "";
                                    string iconClass = "";
                                    string badgeBg = "";
                                    
                                    if (item.Stock > 10)
                                    {
                                        stockText = item.Stock + " disponibles";
                                        iconClass = "fas fa-check-circle";
                                        badgeBg = "#575E54";
                                    }
                                    else if (item.Stock > 0)
                                    {
                                        stockText = item.Stock + " últimos";
                                        iconClass = "fas fa-exclamation-circle";
                                        badgeBg = "#B69FBA";
                                    }
                                    else
                                    {
                                        stockText = "Sin stock";
                                        iconClass = "fas fa-times-circle";
                                        badgeBg = "#6D5A7C";
                                    }
                                }
                                <span class="badge" style="background-color: @badgeBg; color: white; font-size: 0.9rem; padding: 5px 10px;">
                                    <i class="@iconClass me-1"></i> @stockText
                                </span>
                            </div>
                        </div>
                        <div class="card-footer d-flex gap-2 justify-content-between" style="background-color: #F2F2F7;">
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm" style="background-color: #E1DBE6; color: #2B2B35; flex: 1;">
                                <i class="fas fa-eye me-1"></i> Detalles
                            </a>
                            @if (User.IsInRole("admin") || User.IsInRole("empleado"))
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm" style="background-color: #9D8AA8; color: white; flex: 1;">
                                    <i class="fas fa-edit me-1"></i> Editar
                                </a>
                                @if (User.IsInRole("admin"))
                                {
                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm" style="background-color: #4E4259; color: white; flex: 1;">
                                        <i class="fas fa-trash me-1"></i> Eliminar
                                    </a>
                                }
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (!Model.Any())
        {
            <div class="alert" role="alert" style="background-color: #E1DBE6; color: #4E4259; border-color: #D0C6D8;">
                <div class="text-center py-4">
                    <i class="fas fa-box-open fa-3x mb-3"></i>
                    <h4>No hay productos disponibles</h4>
                    <p>No se encontraron productos que coincidan con los criterios de búsqueda.</p>
                    @if (User.IsInRole("admin") || User.IsInRole("empleado"))
                    {
                        <a asp-action="Create" class="btn mt-2" style="background-color: #6D5A7C; color: white;">
                            <i class="fas fa-plus me-2"></i> Agregar un producto
                        </a>
                    }
                </div>
            </div>
        }
    </div>
</div>

<style>
.modern-products-table tbody tr:hover {
    background-color: #F8F9FA;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.1);
}

.product-row:hover .product-avatar {
    transform: scale(1.1) rotate(5deg);
    background: linear-gradient(135deg, #9D8AA8, #E1DBE6) !important;
}

.stock-badge {
    transition: all 0.3s ease;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.stock-badge:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 8px rgba(0,0,0,0.15);
}

.card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
}
</style>

<script>
function toggleView(mode) {
    const tableView = document.getElementById('tableView');
    const cardsView = document.getElementById('cardsView');
    
    if (mode === 'table') {
        tableView.classList.remove('d-none');
        cardsView.classList.add('d-none');
    } else {
        tableView.classList.add('d-none');
        cardsView.classList.remove('d-none');
    }
    
    // Guardar preferencia en localStorage
    localStorage.setItem('productViewMode', mode);
}

// Cargar preferencia guardada
document.addEventListener('DOMContentLoaded', function() {
    const savedMode = localStorage.getItem('productViewMode') || 'cards';
    toggleView(savedMode);
    
    // Actualizar botones
    const buttons = document.querySelectorAll('.btn-group button');
    buttons.forEach(btn => {
        const isActive = btn.textContent.includes('table') ? savedMode === 'table' : savedMode === 'cards';
        if (isActive) {
            btn.classList.remove('btn-outline-primary');
            btn.classList.add('btn-primary');
        } else {
            btn.classList.remove('btn-primary');
            btn.classList.add('btn-outline-primary');
        }
    });
});
</script>